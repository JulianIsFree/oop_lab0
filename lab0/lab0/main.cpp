#include "module1.h"
#include "module2.h"
#include <iostream>
/*
С тестовой программой нужно выполнить следующие действия:
Собрать программу и убедиться, что на каждый *.cpp файл создается отдельный объектный файл с тем же именем (для Visual Studio, например, в папке Debug будут создаваться файлы с расширением *.obj). +

Убедиться, что при изменении одного *.cpp файла и пересборке проекта обновляется только соответствующий ему объектный файл (дата изменения других объектных файлов останется прежней) +

Объяснить, что выведется при выполнении строк с комментариями (А) и (D) в main.cpp +

Убедиться, что раскомментирование строк (B) и (C) в main.cpp приводит к ошибке компиляции. Объяснить, почему эта ошибка происходит, и предложить пути её устранения. +

Добавить в программу еще одну функцию getMyName(), возвращающую имя Peter. Обернуть её в еще одно пространство имён. +

Объяснить, как можно избавиться от необходимости писать std::cout и вместо этого писать просто cout. +
*/
using namespace std;

namespace MyNameSpace
{
	string getMyName()
	{
		return string("Bulat");
	}
}

int main(int argc, char** argv)
{
	//std::cout << "Hello world!" << "\n";
	cout << "Test" << endl;
	cout << Module1::getMyName() << "\n"; // вызов функции, объявленной в пространстве имен Module1
	cout << Module2::getMyName() << "\n"; // аналогично, но Module2

	using namespace Module1; // с именем getMyName ассоциируется функция из пространства имен Module1
	cout << getMyName() << "\n"; // (A) 
	cout << Module2::getMyName() << "\n"; // вызов функции, объявленной в пространстве имен Module2

	using namespace Module2; // (B)
	//std::cout << getMyName() << "\n"; // COMPILATION ERROR (C) // так как уже используется пространство имен Module1, 
	// содержащее сигнатуру string getMyName(void), то повторное объявление с описанием данной функции
	// вызовет ошибку.
	// Как исправить: не подключать пространство имен Module1, а вызывать фукнции из соответствующего пространства с указанием имени этого пространства

	using Module2::getMyName; // с именем getMyName ассоциируется функция из пространства имен Module2
	cout << getMyName() << "\n"; // (D)
	cout << MyNameSpace::getMyName();
}
